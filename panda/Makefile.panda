# determine list of plugins
# remove spaces from lines. skip lines starting with a #. concatenate the rest into a space-delimited list
PANDA_PLUGINS=$(shell tr -d "[:blank:]" < $(SRC_PATH)/panda/plugins/config.panda | grep -v "^\#" | xargs)

# ditto for extra plugins
ifdef EXTRA_PLUGINS_PATH
	EXTRA_PANDA_PLUGINS=$(shell tr -d "[:blank:]" < $(EXTRA_PLUGINS_PATH)/panda/plugins/config.panda | grep -v "^\#" | xargs)
endif

ifdef CONFIG_SOFTMMU
RR_PRINT_PROG=rr_print_$(TARGET_NAME)$(EXESUF)
endif

PLUGIN_SUBDIR_RULES=$(patsubst %,plugin-%, $(PANDA_PLUGINS))
PLUGIN_SUBDIR_MAKEFLAGS=$(if $(V),,--no-print-directory) BUILD_DIR=$(BUILD_DIR)

ifdef EXTRA_PLUGINS_PATH
	EXTRA_PLUGIN_SUBDIR_RULES=$(patsubst %,extra-plugin-%, $(EXTRA_PANDA_PLUGINS))
	EXTRA_PLUGIN_SUBDIR_MAKEFLAGS=$(if $(V),,--no-print-directory) BUILD_DIR=$(BUILD_DIR)
endif

plugin-%: plog.pb-c.h $(PANDA_API_EXT)
	$(call quiet-command,mkdir -p panda/plugins/$*,)
	$(call quiet-command,$(MAKE) $(PLUGIN_SUBDIR_MAKEFLAGS) \
		-f $(SRC_PATH)/panda/plugins/$*/Makefile \
		V="$(V)" PLUGIN_NAME="$*" TARGET_DIR="$(TARGET_DIR)" all,)

extra-plugin-%: plog.pb-c.h $(PANDA_API_EXT)
	$(call quiet-command,mkdir -p panda/plugins/$*,)
	$(call quiet-command,$(MAKE) $(EXTRA_PLUGIN_SUBDIR_MAKEFLAGS) \
		-f $(EXTRA_PLUGINS_PATH)/panda/plugins/$*/Makefile \
		V="$(V)" PLUGIN_NAME="$*" TARGET_DIR="$(TARGET_DIR)" all,)

all: $(PLUGIN_SUBDIR_RULES)

obj-$(CONFIG_LLVM) += panda/llvm/tcg-llvm.o
panda/llvm/tcg-llvm.o-cflags := $(LLVM_CXXFLAGS) -Wno-cast-qual

PROTO_FILES := $(shell find $(SRC_PATH)/panda/plugins -name *.proto)

plog.proto: $(PROTO_FILES)
	$(call quiet-command,\
		$(SRC_PATH)/panda/scripts/pp.py $@ $(SRC_PATH)/panda/plugins/config.panda,\
		"  PROTO $@")

%.pb-c.h %.pb-c.c: %.proto
	$(call quiet-command,\
		protoc-c --proto_path=. --c_out=. $<,\
		"  PROTO plog.pb-c.h plog.pb-c.c")

plog_pb2.py: plog.proto
	$(call quiet-command,\
		protoc --proto_path=. --python_out=. $<,\
		"  PROTO plog_pb2.py")

GENERATED_HEADERS += plog.pb-c.h

PANDA_API_EXT=$(patsubst %_int.h,%_ext.h,$(wildcard $(SRC_PATH)/panda/plugins/*/*_int.h))

# This keeps make from thinking it's an "intermediate" file
.PRECIOUS: %_ext.h

%_ext.h: %_int.h
	$(call quiet-command,\
		$(SRC_PATH)/panda/scripts/apigen.py $< $@,\
		"  API   $@")

obj-y += panda/src/callbacks.o
obj-y += panda/src/callback_support.o
obj-y += panda/src/common.o
obj-y += panda/src/plog.o
obj-y += plog.pb-c.o
obj-y += panda/src/rr/rr_log.o
#obj-y += panda/src/plog_print.o
#obj-y += panda/src/plog_reader.o
#obj-y += panda/src/guestarch.o

panda/src/rr/rr_print.o: \
	$(SRC_PATH)/panda/include/panda/rr/rr_log.h \
	$(SRC_PATH)/panda/include/panda/rr/rr_log_all.h

$(RR_PRINT_PROG): panda/src/rr/rr_print.o
	$(call LINK,$^)

PROGS+=$(RR_PRINT_PROG) plog_pb2.py

clean: clean-panda

clean-panda:
	@if [ -d "panda/plugins" ]; then\
		find panda/plugins -depth -mindepth 1 -delete;\
	fi
